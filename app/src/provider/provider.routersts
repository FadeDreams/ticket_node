import { Router, Response, Request, NextFunction } from "express";
import { BadRequestError, uploadDir, CustomError } from "@fadedreams7org1/common";
import { providerService } from './provider.service';
import multer from "multer";
import { requireAuth } from "@fadedreams7org1/common";

const router = Router();

const storage = multer.memoryStorage();
const upload = multer({
  storage: storage,
  fileFilter: (req, file, cb) => {
    const allowedTypes = ['image/png', 'image/jpeg', 'image/jpg'];
    if (allowedTypes.includes(file.mimetype)) {
      cb(null, true);
    } else {
      cb(null, false);
    }
  },
});

router.post('/item/new', requireAuth, upload.array('images', 5), async (req: Request, res: Response, next: NextFunction) => {
  const { title, price } = req.body;
  console.log(title);
  console.log(price);

  // If using upload.array, you can access files as req.files
  const files = req.files;

  if (!files || files.length === 0) {
    return next(new BadRequestError('Images are required'));
  }

  try {
    const item = await providerService.addItem({
      title,
      price,
      userId: req.currentUser!.userId,
      files: files,
    });

    res.status(201).send(item);
  } catch (error) {
    next(error);
  }
});

export { router as providerRouters };
